generator client {
   provider        = "prisma-client-js"
   previewFeatures = ["omitApi"]
}

datasource db {
   provider = "postgresql"
   url      = "postgresql://XTheme:39911009XTheme@db:5432/xthemey-chat?schema=public"
}

model User {
   id String @id @default(cuid())

   name           String?
   login          String?  @unique
   hashedPassword String?
   email          String?  @unique
   emailVerified  Boolean? @default(false)
   gender         Gender?
   image          String?

   conversations Conversation[]

   seenMessages Message[] @relation("Seen")

   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt

   accounts Account[]
   messages Message[]
}

model Account {
   id                String  @id @default(cuid())
   userId            String
   type              String
   provider          String
   providerAccountId String
   refresh_token     String? @db.Text
   access_token      String? @db.Text
   expires_at        Int?
   token_type        String?
   scope             String?
   id_token          String? @db.Text
   sessionState      String?

   user User @relation(fields: [userId], references: [id], onDelete: Cascade)

   @@unique([provider, providerAccountId])
}

model Conversation {
   id            String    @id @default(cuid())
   createdAt     DateTime  @default(now())
   lastMessageAt DateTime?
   name          String?
   isGroup       Boolean   @default(false)

   messages Message[]

   users User[]
}

model Message {
   id String @id @default(cuid())

   body        String?
   image       String?
   attachments String[]

   createdAt DateTime @default(now())
   isChanged Boolean  @default(false)

   seenIds String[]
   seen    User[]   @relation("Seen")

   conversationId String
   conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)

   senderId String
   sender   User   @relation(fields: [senderId], references: [id], onDelete: Cascade)
}

enum Gender {
   male
   female
}

model File {
   id           String   @id @default(cuid())
   bucket       String
   fileName     String   @unique
   originalName String
   createdAt    DateTime @default(now())
   size         Int
}
